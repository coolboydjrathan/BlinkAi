rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user document.
      allow create: if isOwner(userId);
      // Only the owner can read or update their own user document.
      allow read, update: if isOwner(userId);
      // Users cannot delete their own profile document.
      allow delete: if false;
    }

    // Rules for the 'conversations' collection
    match /conversations/{conversationId} {
      // A user can create, read, update, or delete a conversation if they are the owner.
      // The `userId` field on the conversation document must match their auth UID.
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);

      // Rules for the 'messages' subcollection within a conversation
      match /messages/{messageId} {
        // A user can read messages in a conversation they own.
        allow read: if isOwner(get(/databases/$(database)/documents/conversations/$(conversationId)).data.userId);
        // A user can create a message if they own the parent conversation.
        allow create: if isOwner(get(/databases/$(database)/documents/conversations/$(conversationId)).data.userId);
        // A user can update their own message (e.g., for reactions).
        allow update: if isOwner(get(/databases/$(database)/documents/conversations/$(conversationId)).data.userId);
        // Messages cannot be deleted directly by users to maintain conversation integrity.
        allow delete: if false;
      }
    }
    
    // Rules for the 'feedback' collection
    match /feedback/{feedbackId} {
        // Any authenticated user can submit feedback.
        allow create: if isOwner(request.resource.data.userId);
        // Only admins should be able to read/manage feedback. Disallow for users.
        allow read, update, delete: if false;
    }
  }
}
