
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is the owner of the document.
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user document upon signup.
      // The document UID must match their authentication UID.
      allow create: if isOwner(userId)
                    && request.resource.data.uid == userId;
      
      // A user can only read their own profile.
      allow get: if isOwner(userId);
      
      // A user can only update their own profile.
      // They cannot change their uid or email.
      allow update: if isOwner(userId)
                    && request.resource.data.uid == resource.data.uid
                    && request.resource.data.email == resource.data.email;
    }

    // Rules for the 'conversations' collection and its subcollections
    match /conversations/{conversationId} {
      // A user can read a conversation if they are the owner.
      allow get: if isOwner(resource.data.userId);
      
      // A user can list their own conversations. The query must filter by userId.
      allow list: if request.auth != null 
                  && request.query.get('userId') == request.auth.uid;
      
      // An authenticated user can create a new conversation for themselves.
      allow create: if request.auth != null 
                    && request.resource.data.userId == request.auth.uid;
      
      // A user can update their own conversation (e.g., title, archived status).
      allow update: if isOwner(resource.data.userId);

      // A user can delete their own conversation.
      allow delete: if isOwner(resource.data.userId);

      // Rules for the 'messages' subcollection
      match /messages/{messageId} {
        // A user can access messages if they own the parent conversation.
        // This check requires a read of the parent document.
        allow read, write: if isOwner(get(/databases/$(database)/documents/conversations/$(conversationId)).data.userId);
      }
    }
  }
}
